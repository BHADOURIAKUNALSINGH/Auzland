name: Deploy to S3 (+ CloudFront)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js 18
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install deps
        run: npm ci

      # TEMP: ignore CRA warnings; remove CI=false after fixing ESLint warnings
      - name: Build
        env:
          CI: false
        run: npm run build

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Sync static assets (immutable cache)
        run: |
          OUT_DIR="build"
          aws s3 sync "$OUT_DIR" "s3://${{ secrets.S3_BUCKET }}" \
            --delete \
            --exclude index.html \
            --cache-control "public, max-age=31536000, immutable"

      - name: Upload index.html (no-cache)
        run: |
          OUT_DIR="build"
          aws s3 cp "$OUT_DIR/index.html" "s3://${{ secrets.S3_BUCKET }}/index.html" \
            --cache-control "no-store"

      # Make the CF ID available via env so we can test it in 'if:'
      - name: Export CF_DISTRIBUTION_ID to env
        run: echo "CF_DISTRIBUTION_ID=${{ secrets.CF_DISTRIBUTION_ID }}" >> $GITHUB_ENV

      - name: Invalidate CloudFront
        if: ${{ env.CF_DISTRIBUTION_ID != '' }}
        run: |
          aws cloudfront create-invalidation \
            --distribution-id "$CF_DISTRIBUTION_ID" \
            --paths "/*"
